name: API Test and deploy
on:
  push:
    paths:
      - "services/api/**"
      - ".github/workflows/api.yml"

env: # new
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-north-1
  APP_ENVIRONMENT: development

jobs:
  test: # new
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        uv-version: ["0.6.16"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          uv-version: ${{ matrix.uv-version }}
      - name: Install dependencies
        run: uv sync --locked --all-extras --dev
      - name: Run tests
        run: uv run pytest tests --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        uv-version: ["0.6.16"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          uv-version: ${{ matrix.uv-version }}
      - name: Install dependencies
        run: uv sync --locked --all-extras --dev
      - name: Run Black
        run: uv run black api --check
      - name: Run Ruff
        run: uv run ruff check --output-format=github api
      - name: Run bandit
        run: uv run bandit api
  deploy-development: # new
    needs: [test, code-quality]
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        uv-version: ["0.6.16"]
        node-version: [18]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/api
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          uv-version: ${{ matrix.uv-version }}
      - name: Export dependencies
        run: uv export --no-dev --frozen -o requirements.txt
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Serverless Framework
        run: npm install -g serverless
      - name: Install NPM dependencies
        run: npm install
      - name: Deploy
        run: sls deploy --stage development --verbose
